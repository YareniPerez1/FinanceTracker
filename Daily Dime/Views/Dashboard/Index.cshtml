@{
    ViewData["isDashboard"] = true;
    // var recentTransactions = ViewBag.RecentTransactions as List<FTDataAccess.Models.Transaction>;
}
@using System.Text.Json
@using Newtonsoft.Json
@model Daily_Dime.Models.DashboardViewModel

<!-- Summary Widgets -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="d-flex flex-row widget summary income">
            <div class="d-flex flex-column justify-content-center p-5">
                <i class="fa-solid fa-dollar-sign fa-2xl"></i>
            </div>
            <div class="d-flex flex-column m-auto py-3">
                <span class="lead">
                    Total Income <i class="fa-solid fa-circle-info ms-2 text-white fa-xs"
                                    data-bs-toggle="tooltip"
                                    title="This is your total income for the selected date range. It cannot be edited.">
                    </i>
                </span>
                <h1 class="display-6 fw-bold">
                    @Model.TotalIncome 
                </h1>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="d-flex flex-row widget summary expense">
            <div class="d-flex flex-column justify-content-center p-5">
                <i class="fa-solid fa-dollar-sign fa-2xl"></i>
            </div>
            <div class="d-flex flex-column m-auto py-3">
                <span class="lead">
                    Total Expense <i class="fa-solid fa-circle-info ms-2 text-white fa-xs"
                                     data-bs-toggle="tooltip"
                                     title="This is your total expense for the selected date range. It cannot be edited.">
                    </i>
                </span>
                <h1 class="display-6 fw-bold">
                    @Model.TotalExpense 
                </h1>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="d-flex flex-row widget summary balance">
            <div class="d-flex flex-column justify-content-center p-5">
                <i class="fa-solid fa-dollar-sign fa-2xl"></i>
            </div>
            <div class="d-flex flex-column m-auto py-3">
                <span class="lead">
                    Balance <i class="fa-solid fa-circle-info ms-2 text-white fa-xs"
                               data-bs-toggle="tooltip"
                               title="This is your balance after expenses are taken out for the selected date range. It cannot be edited.">
                    </i>
                </span>
                <h1 class="display-6 fw-bold">
                    @Model.Balance 
                </h1>
            </div>
        </div>
    </div>
</div>

<!--filter by date section -->



<form method="get" asp-action="Index" class="mb-4">
    <div class="d-flex justify-content-center gap-3 flex-wrap">
        <div class="col-md-3">
            <label for="startDate" class="form-label small">
                Start Date <i class="fa-solid fa-circle-info ms-2 text-white fa-xs"
                              data-bs-toggle="tooltip"
                              title="Select the beginning of your report range">
                </i>
            </label>
            <input type="date" class="form-control" name="startDate" id="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label for="endDate" class="form-label small">
                End Date  <i class="fa-solid fa-circle-info ms-2 text-white fa-xs"
                             data-bs-toggle="tooltip"
                             title="Select the ending of your report range">
                </i>
            </label>
            <input type="date" class="form-control" name="endDate" id="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3 d-flex align-items-end">
            <button type="submit" class="btn btn-success" style=" height: 33px;">Apply</button>
        </div>
     
    </div>
</form>


<!-- Charts Section -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="widget chart">
            <div class="p-4">
                <h5 class="fw-bold">
                    Expense By Category <i class="fa-solid fa-circle-info text-white fa-xs"
                                           data-bs-toggle="tooltip"
                                           title="Shows how much you've spent in each category for the selected date range.">
                    </i>
                </h5>
            </div>
            <div class="p-4">
                <canvas id="doughnutChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="widget chart">
            <div class="p-4">
                <h5 class="fw-bold">
                    Income vs Expense <i class ="fa-solid fa-circle-info ms-2 text-white fa-xs"
                                         data-bs-toggle="tooltip"
                                         title="Shows how much you've spent and your income for the selected date range.">
                    </i>
                </h5>
            </div>
            <div class="p-4">
                <canvas id="splineChart"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Recent Transactions -->
<div class="row">
    <div class="col-md-6">
        <div class="widget">
            <div class="p-4">
                <h5 class="fw-bold">Recent Transactions</h5>
            </div>
            <div class="px-4 pb-4">
                <table class="table table-hover table-dark">
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>Date</th>
                            <th class="text-end">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var tx in Model.RecentTransactions)
                        {
                            <tr>
                                <td>@tx.Category.TitleAndIcon</td>
                                <td>@tx.Date.ToString("MMM-dd-yy")</td>
                                @* <td>@((DateTime)tx.Date).ToString("MMM-dd-yy")</td> *@

                              @*   <td>
                                    @if (tx.Date != null)
                                    {
                                        @tx.Date.ToString("MMM-dd-yy")
                                    }
                                    else
                                    {
                                        <span>N/A</span>
                                    }
                                </td> *@
                                <td class="text-end">@tx.FormattedAmount</td>
                              @*   <td class="text-end">
                                    @if (tx.FormattedAmount != null)
                                    {
                                        @tx.FormattedAmount
                                    }
                                    else
                                    {
                                        <span>N/A</span>
                                    }
                                </td> *@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
@*     <div class="col-md-6">
        <div class="widget h-100">
            <div class="d-flex justify-content-center align-items-center h-100">
                <span><i class="fa-solid fa-plus fa-2xl"></i> Widget</span>
            </div>
        </div>
    </div>*@

 
<div class="col-md-6">
    <div class="widget h-100  rounded p-3 shadow-sm">
        <div class="d-flex justify-content-center align-items-center h-100">
            <div class="text-center text-white">
                <i class="fa-solid fa-piggy-bank fa-2xl mb-3"></i>
                <h5 class="mb-2">Recommended Savings</h5>
                <p class="mb-0">
                    <strong>@Model.RecommendedSavings</strong>
                </p>
                <small class="text-muted">20% of disposable income</small>
            </div>
        </div>
    </div>
</div>



<!-- Chart.js Rendering Script -->
@section Scripts {
    <script>
        // Doughnut Chart
        const doughnutCtx = document.getElementById('doughnutChart').getContext('2d');
        new Chart(doughnutCtx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.DoughnutLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.DoughnutData)),
                    backgroundColor: ['#0e8d76','#a4b219','#cb9b00','#8a442c','#0454b5','#7d0a0a','#822690','#4c2090','#313e93','#0096ac']
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'top' }
                }
            }
        });

        // Line Chart
        const lineCtx = document.getElementById('splineChart').getContext('2d');
        new Chart(lineCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.SplineLabels)),
                datasets: [
                    {
                        label: 'Income',
                        data: @Html.Raw(Json.Serialize(Model.SplineIncomeData)),
                        borderColor: '#54ffa9',
                        tension: 0.4
                    },
                    {
                        label: 'Expense',
                        data: @Html.Raw(Json.Serialize(Model.SplineExpenseData)),
                        borderColor: '#ffe91a',
                        tension: 0.4
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#32414d'
                        }
                    },
                    x: {
                        grid: { display: false }
                    }


                }
            }
            
        });

             // Tooltip Initialization (Run after DOM is ready)
            document.addEventListener('DOMContentLoaded', function () {
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                    new bootstrap.Tooltip(tooltipTriggerEl);
                });
            });
    </script>
}
