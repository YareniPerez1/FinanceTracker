
   @model FTDataAccess.Models.PagedTransactionViewModel

@{
    ViewData["PageTitle"] = "Transactions";
    ViewData["PageActionText"] = "+ Add a new Transaction";
    ViewData["PageActionUrl"] = "/Transaction/AddOrEdit";
    var firstItem = Model.Transactions.FirstOrDefault();
}










    <div class="row d-flex align-items-stretch mb-4 ">
        <div class="col-md-7 d-flex justify-content-between align-items-center">
            <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                <ol class="breadcrumb ">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Dashboard")"><i class="fa-solid fa-house"></i></a>
                    </li>
               
                <li class="breadcrumb-item active" aria-current="page">
                        @ViewData["PageTitle"]   <i class="fa-solid fa-circle-info text-white ms-2"
                                                data-bs-toggle="tooltip"
                                                title="This page lets you view, edit, or delete your transactions. You can also add a new one with the green button on the right."></i>
                </li>
                </ol>
            </nav>
            <a href="@ViewData["PageActionUrl"]" class="btn btn-success mb-4">
                @ViewData["PageActionText"]
            </a>
        </div>
    <!-- Left: Table -->
    <div class="col-md-7 d-flex">
        <div class="w-100">
            <table class="table clean-header table-borderless w-100 h-100" style="table-layout: fixed;">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Amount</th>
                        <th>Note</th>
                        <th>Date</th>
                        <th style="width: 200px;">Actions</th>
                      
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Transactions)
                    {
                        <tr>
                         

                            <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;" title="@item.Category?.Title">@Html.DisplayFor(modelItem => item.Category.TitleAndIcon)</td>
                            <td>@Html.DisplayFor(modelItem => item.FormattedAmount)</td>
                            <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;" title="@item.Note">@Html.DisplayFor(modelItem => item.Note)</td>
                            <td>@item.Date.ToShortDateString()</td>
                          
                            <td>
                                <a asp-action="AddOrEdit" asp-route-id="@item.TransactionId" title="Edit" class="text-success text-decoration-none">
                                    <i class="fa fa-pencil-alt"></i>
                                </a>
                             
                                &nbsp;
                                <button type="button" class="btn btn-link p-0 m-0 text-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-transaction-id="@item.TransactionId">
                                    <i class="fa fa-trash-alt"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination Controls -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link @(i == Model.CurrentPage ? "bg-success text-white" : "")" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <!-- Right: Icon Block -->
    <div class="col-md-5 d-flex">
        <div class="widget w-100 d-flex justify-content-center align-items-center" style="background-color: #212b36;">
            <i class="fa-solid fa-coins fa-2xl text-white"></i>
        </div>
    </div>
</div>

<!-- Confirmation Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form method="post" asp-action="Delete">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="deleteTransactionId" />
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-dark">
                    Are you sure you want to delete this transaction?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const transactionId = button.getAttribute('data-transaction-id');
            const input = deleteModal.querySelector('#deleteTransactionId');
            input.value = transactionId;
        });
    </script>
}












































@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Catgory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Catgory.Icon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.TransactionId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.TransactionId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.TransactionId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
